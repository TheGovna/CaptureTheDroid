package rose.capturethedroid;



import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;


import com.google.android.gms.maps.GoogleMap;



import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;

public class MainActivity extends Activity {
	
	private GoogleMap map;
	
	private static final int RED_TEAM = 0;
	private static final int BLU_TEAM = 1;

	private boolean hasFlag;
	private boolean connected;
	
	private Coordinate playerloc;
	
	private int team;
	
	private Socket socket = null;
	private final int port=1342;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		map = ((MapFragment) getFragmentManager().findFragmentById(R.id.map)).getMap();
		this.hasFlag = false;
		this.connected = false;
		this.lon = 0;
		this.lat = 0;
		this.team = 0;
		PrintWriter out;
		BufferedReader in;
		Gson gson=new Gson();
	
		try {
			Inet4Address inet4 = (Inet4Address)InetAddress.getByName("MILLERLJ-1.rose-hulman.edu");
			this.socket=new Socket(inet4,this.port);
            out = new PrintWriter(this.socket.getOutputStream(), true);
            in = new BufferedReader(
                new InputStreamReader(
                    this.socket.getInputStream()));
		}catch(Exception e) {
			e.printStackTrace();
		}
		final Handler handler = new Handler();
		handler.post(new Runnable() { 

			@Override
			public void run() {
				
				if (connected) {
					// Send information to the server
						//create new JsonObject
					JsonHolder jsonData=new JsonHolder(team,)
					// Get information from the server

					// Parse infromation from the server

					// Update map information

					// update hasFlag box here
					if (hasFlag) {
						TextView tv1 = (TextView)findViewById(R.id.text1);
						tv1.setText("You have the enemy flag!");
					} else {
						TextView tv1 = (TextView)findViewById(R.id.text1);
						tv1.setText("Go get the the flag!");
					}
					
					// Test toast
					Toast.makeText(getApplicationContext(), "Toast",
							Toast.LENGTH_SHORT).show();
				}
				// Delay
				handler.postDelayed(this, 1000); // Refresh time

			}

		});

		// if (savedInstanceState == null) {
		// getSupportFragmentManager().beginTransaction()
		// .add(R.id.container, new PlaceholderFragment()).commit();
		// }
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	public void showLocation(View view) {

		this.connected = !this.connected;

		GPSTracker gps = new GPSTracker(MainActivity.this);

		// check if GPS enabled
		if (gps.canGetLocation()) {
			double latitude = gps.getLatitude();
			double longitude = gps.getLongitude();
			this.lon = longitude;
			this.lat = latitude;

			Toast.makeText(
					getApplicationContext(),
					"Your location is - \nLat: " + latitude + "\nLong: "
							+ longitude, Toast.LENGTH_LONG).show();
		} else {
			// can't get location
			// GPS or Network isn't enabled
			// ask user to enable GPS/network in settings
			gps.showSettingsAlert();
		}

	}
	
	public void displayMap(View view) {
		Uri location = Uri.parse("geo:" + this.lat + "," + this.lon + "z=14");
		Intent mapIntent = new Intent(Intent.ACTION_VIEW, location);
		startActivity(mapIntent);
	}
	
	public void chooseRed(View view) {
		this.team = RED_TEAM;
	}
	
	public void chooseBlu(View view) {
		this.team = BLU_TEAM;
	}

	// /**
	// * A placeholder fragment containing a simple view.
	// */
	// public static class PlaceholderFragment extends Fragment {
	//
	// public PlaceholderFragment() {
	// }
	//
	// @Override
	// public View onCreateView(LayoutInflater inflater, ViewGroup container,
	// Bundle savedInstanceState) {
	// View rootView = inflater.inflate(R.layout.activity_main, container,
	// false);
	// return rootView;
	// }
	// }

}
